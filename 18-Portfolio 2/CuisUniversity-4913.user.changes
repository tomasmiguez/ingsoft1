

----QUIT----(13 October 2021 15:20:10) CuisUniversity-4913.image priorSource: 14638157!

----STARTUP---- (13 October 2021 15:20:10) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4913.image!


----QUIT----(13 October 2021 15:20:10) CuisUniversity-4913.image priorSource: 18661767!

----STARTUP---- (13 October 2021 15:21:02) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4913.image!


----QUIT----(13 October 2021 15:21:02) CuisUniversity-4913.image priorSource: 18661997!

----QUIT----(13 October 2021 15:26:07) CuisUniversity-4913.image priorSource: 14638157!

----STARTUP---- (13 October 2021 15:26:08) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4913.image!


----QUIT----(13 October 2021 15:26:08) CuisUniversity-4913.image priorSource: 18661767!

----STARTUP---- (24 October 2021 19:37:09) as D:\Users\Tomas\Documents\CUIS\windows64\CuisUniversity-4913.image!


----End fileIn of D:\Users\Tomas\Documents\CUIS\windows64\Portfolio-Ejercicio.st----!

----SNAPSHOT----(24 October 2021 19:37:36) CuisUniversity-4913.image priorSource: 18661997!
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:53' prior: 50915177 overrides: 16881508!
value 

	self subclassResponsibility ! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:53' prior: 50915222 overrides: 50915437!
value

	^ value! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:53' prior: 50915210!
initializeFor: aValue

	value := aValue ! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:53' prior: 50915218!
balanceValue
	^value.! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:53' prior: 50915214!
addValueToBalance: aBalance
	^ aBalance + value.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50915330!
hasRegistered: anAccountTransaction 
	
	^portfolioItems anySatisfy: [:anXXX | anXXX hasRegistered: anAccountTransaction].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50915337!
transactions

	^(portfolioItems collect: [:portfolioItem | portfolioItem transactions]) flatten.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50915343!
add: aPortfolioItem 
	(self parents anySatisfy: [:portfolio | portfolio hasItem: aPortfolioItem]) ifTrue: [self error: 'cyclic accounts'].
	aPortfolioItem addParent: self.
	portfolioItems add: aPortfolioItem.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50915364 overrides: 50915293!
initialize

	portfolioItems _ OrderedCollection new.
	directParents _ Set new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50915325!
balance

	^(portfolioItems sum: [ :anXXX | anXXX balance ] ifEmpty: [0]).! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50915353 overrides: 50915301!
hasItem: aPortfolioItem
	| childHasIt isChild isIt |
	isChild _ portfolioItems includes: aPortfolioItem.
	isIt _ self = aPortfolioItem.
	childHasIt _ portfolioItems anySatisfy: [:item | item hasItem: aPortfolioItem].
	^isIt or: isChild or: childHasIt.! !
!PortfolioItem methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50915293 overrides: 16896425!
initialize
	directParents _ Set new.! !
!PortfolioItem methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50915297!
addParent: parent
	directParents add: parent.! !
!PortfolioItem methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50915301!
hasItem: aPortfolioItem
	self subclassResponsibility. ! !
!PortfolioItem methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50915305!
parents
	| farParents |
	farParents _ (directParents collect: [:parent | parent parents]) asOrderedCollection flatten.
	^directParents, farParents. ! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50914932!
test08PortfolioWithItemsHasItemsTransactions

	| aPortfolio anAccount aDeposit transactions |
	
	aDeposit _ (Deposit for: 10).
	aPortfolio _ Portfolio new.
	anAccount _ ReceptiveAccount new.
	anAccount register: aDeposit.
	transactions _ OrderedCollection with: aDeposit.
	
	aPortfolio add: anAccount.
	
	self assert: transactions equals: (aPortfolio transactions).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50914886!
test04PortfolioWithPortfolioWithAccountHasAccountBalance

	| aPortfolio anOtherPortfolio anAccount |
	
	anAccount _ ReceptiveAccount new.
	anAccount register: (Deposit for: 10).
	
	aPortfolio _ Portfolio new.
	
	anOtherPortfolio _ Portfolio new.
	anOtherPortfolio add: anAccount.

	aPortfolio add: anOtherPortfolio.
	
	self assert: 10 equals: (aPortfolio balance).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50914969!
test11CycleWith4Portfolios
	| portfolio subPortfolio1 subPortfolio2 subSubPortfolio |
	portfolio _ Portfolio new.
	subPortfolio1 _ Portfolio new.
	subPortfolio2 _ Portfolio new.
	subSubPortfolio _ Portfolio new.
	portfolio add: subPortfolio1.
	portfolio add: subPortfolio2.
	subPortfolio1 add: subSubPortfolio.
	self should: [subPortfolio2 add: subSubPortfolio] 
		raise: Exception.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50914901!
test05EmptyPortfolioHasNotRegisteredDeposits

	| aPortfolio aDeposit |
	
	aPortfolio _ Portfolio new.
	aDeposit _ Deposit for: 10.
	
	self deny: (aPortfolio hasRegistered: aDeposit).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50914923!
test07EmptyPortfolioDoesNotHaveTransactions

	| aPortfolio |
	
	aPortfolio _ Portfolio new.
	
	self assert: (OrderedCollection new) equals: (aPortfolio transactions).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50914857!
test01EmptyPortfolioHas0Balance

	| aPortfolio |
	
	aPortfolio _ Portfolio new.
	
	self assert: 0 equals: (aPortfolio balance).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50914947!
test09CycleWith2Portfolios

	| portfolio1 portfolio2 |
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolio1 add: portfolio2.
	self should: [portfolio2 add: portfolio1] 
		raise: Exception.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50914957!
test10CycleWith3portfolios

	| portfolio1 portfolio2 portfolio3 |
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolio3 _ Portfolio new.
	portfolio1 add: portfolio2.
	portfolio2 add: portfolio3.
	self should: [portfolio3 add: portfolio2] 
		raise: Exception.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50914910!
test06PortfolioWithItemsHasRegisteredItemsDeposits

	| aPortfolio anAccount aDeposit |
	
	aDeposit _ Deposit for: 10.
	anAccount _ ReceptiveAccount new.
	anAccount register: aDeposit.
	aPortfolio _ Portfolio new.
	
	aPortfolio add: anAccount.
	
	self assert: (aPortfolio hasRegistered: aDeposit).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50914875!
test03PortfolioWithEmptyPortfolioHasEmptyPortfolioBalance

	| aPortfolio anOtherPortfolio |
	
	aPortfolio _ Portfolio new.
	anOtherPortfolio _ Portfolio new.
	
	aPortfolio add: anOtherPortfolio. 
	
	self assert: 0 equals: (aPortfolio balance).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50914864!
test02PortfolioWithAccountHasAccountBalance

	| aPortfolio anAccount |
	
	aPortfolio _ Portfolio new.
	anAccount _ ReceptiveAccount new.
	anAccount register: (Deposit for: 10).
	
	aPortfolio add: anAccount.
	
	self assert: 10 equals: (aPortfolio balance).! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50915395!
transactions 

	^ transactions copy! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50915405!
hasRegistered: aTransaction

	^ transactions includes: aTransaction 
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:54' prior: 50915384 overrides: 50915509!
initialize

	transactions _ OrderedCollection new.
	directParents _ Set new.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915415!
sumary
	| result |
	result _ OrderedCollection new.
	self transactions do: [:transaction |
		(transaction isKindOf: Withdraw) ifTrue: [
			result addLast: 'withdraw for ', transaction value asString].
		(transaction isKindOf: Deposit) ifTrue: [
			result addLast: 'deposit for ', transaction value asString].].
	result addLast: 'balance = ', (self balance asString)	.
	^result.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915390!
register: aTransaction

	transactions add: aTransaction 
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915399!
balance
	
	^transactions sum: [:aTransaction | aTransaction balanceValue] ifEmpty: [0].! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915411 overrides: 50915519!
hasItem: aPortfolioItem

	^self = aPortfolioItem.! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915024!
test04WithdrawValueMustBePositive 

	| account withdrawValue |
	
	account := ReceptiveAccount new.
	withdrawValue := 50.
	
	self assert: withdrawValue equals: (Withdraw register: withdrawValue on: account) value
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915059!
test07AccountKnowsItsTransactions 

	| account1 deposit1 |
	
	account1 := ReceptiveAccount new.
	
	deposit1 := Deposit register: 50 on: account1.
		
	self assert: 1 equals: account1 transactions size.
	self assert: (account1 transactions includes: deposit1).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50914997!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| account |
	
	account := ReceptiveAccount new.

	self assert: 0 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915014!
test03WithdrawDecreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
		
	self assert: 50 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915034!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| account deposit withdraw |
	
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.
	withdraw := Withdraw register: 50 on: account.
		
	self assert: (account hasRegistered: deposit).
	self assert: (account hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915047!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| deposit withdraw account |
	
	account := ReceptiveAccount new.
	deposit :=  Deposit for: 200.
	withdraw := Withdraw for: 50.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered:withdraw).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915005!
test02DepositIncreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
		
	self assert: 100 equals: account balance.
! !
!ReportsTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915125!
test05
	| account sumary deposit expected |
	account _ ReceptiveAccount  new.
	deposit _ Deposit for: 20. 
	account register: deposit.
	sumary _ account sumary.
	expected _ OrderedCollection with: 'deposit for 20' with: 'balance = 20'.
	self assert: expected equals: sumary.! !
!ReportsTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915137!
test06
	| account sumary withdraw expected |
	account _ ReceptiveAccount  new.
	withdraw _ Withdraw for: 10. 
	account register: withdraw.
	sumary _ account sumary.
	expected _ OrderedCollection with: 'withdraw for 10' with: 'balance = -10'.
	self assert: expected equals: sumary.! !
!ReportsTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915101!
test03
	| account sumary withdraw expected |
	account _ ReceptiveAccount  new.
	withdraw _ Withdraw for: 10. 
	account register: withdraw.
	sumary _ account sumary.
	expected _ OrderedCollection with: 'withdraw for -10' with: 'balance = -10'.
	self assert: 'balance = -10' equals: sumary last.! !
!ReportsTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915113!
test04
	| account sumary deposit expected |
	account _ ReceptiveAccount  new.
	deposit _ Deposit for: 10. 
	account register: deposit.
	sumary _ account sumary.
	expected _ OrderedCollection with: 'deposit for 10' with: 'balance = 10'.
	self assert: expected equals: sumary.! !
!ReportsTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915082!
test01
	| account sumary expected |
	account _ ReceptiveAccount  new.
	sumary _ account sumary.
	expected _ OrderedCollection with: 'balance = 0'.
	self assert: expected equals:  sumary.! !
!ReportsTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915149!
test07
	| account sumary withdraw expected deposit |
	account _ ReceptiveAccount  new.
	withdraw _ Withdraw for: 10. 
	deposit _ Deposit for: 10.
	account register: withdraw.
	account register: deposit.
	sumary _ account sumary.
	expected _ OrderedCollection with: 'withdraw for 10' with: 'deposit for 10' with: 'balance = 0'.
	self assert: expected equals: sumary.! !
!ReportsTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915091!
test02
	| account sumary deposit |
	account _ ReceptiveAccount  new.
	deposit _ Deposit for: 10. 
	account register: deposit.
	sumary _ account sumary.
	self assert: 'balance = 10' equals: sumary last.! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915263 overrides: 50915437!
value

	^ value! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915251!
initializeFor: aValue

	value := aValue ! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915259!
balanceValue
	^value negated.! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:37:55' prior: 50915255!
addValueToBalance: aBalance

	^ aBalance - value.! !

----STARTUP---- (24 October 2021 19:41:13) as D:\Users\Tomas\Documents\CUIS\windows64\CuisUniversity-4913.image!

!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:27' prior: 50915177 overrides: 16881508!
value 

	self subclassResponsibility ! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:27' prior: 50915222 overrides: 50915898!
value

	^ value! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:27' prior: 50915210!
initializeFor: aValue

	value := aValue ! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:27' prior: 50915218!
balanceValue
	^value.! !
!Deposit methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:27' prior: 50915214!
addValueToBalance: aBalance
	^ aBalance + value.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:27' prior: 50915330!
hasRegistered: anAccountTransaction 
	
	^portfolioItems anySatisfy: [:anXXX | anXXX hasRegistered: anAccountTransaction].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:27' prior: 50915337!
transactions

	^(portfolioItems collect: [:portfolioItem | portfolioItem transactions]) flatten.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:27' prior: 50915343!
add: aPortfolioItem 
	(self parents anySatisfy: [:portfolio | portfolio hasItem: aPortfolioItem]) ifTrue: [self error: 'cyclic accounts'].
	aPortfolioItem addParent: self.
	portfolioItems add: aPortfolioItem.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50915364 overrides: 50915293!
initialize

	portfolioItems _ OrderedCollection new.
	directParents _ Set new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50915325!
balance

	^(portfolioItems sum: [ :anXXX | anXXX balance ] ifEmpty: [0]).! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50915353 overrides: 50915301!
hasItem: aPortfolioItem
	| childHasIt isChild isIt |
	isChild _ portfolioItems includes: aPortfolioItem.
	isIt _ self = aPortfolioItem.
	childHasIt _ portfolioItems anySatisfy: [:item | item hasItem: aPortfolioItem].
	^isIt or: isChild or: childHasIt.! !
!PortfolioItem methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50915293 overrides: 16896425!
initialize
	directParents _ Set new.! !
!PortfolioItem methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50915297!
addParent: parent
	directParents add: parent.! !
!PortfolioItem methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50915301!
hasItem: aPortfolioItem
	self subclassResponsibility. ! !
!PortfolioItem methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50915305!
parents
	| farParents |
	farParents _ (directParents collect: [:parent | parent parents]) asOrderedCollection flatten.
	^directParents, farParents. ! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50914932!
test08PortfolioWithItemsHasItemsTransactions

	| aPortfolio anAccount aDeposit transactions |
	
	aDeposit _ (Deposit for: 10).
	aPortfolio _ Portfolio new.
	anAccount _ ReceptiveAccount new.
	anAccount register: aDeposit.
	transactions _ OrderedCollection with: aDeposit.
	
	aPortfolio add: anAccount.
	
	self assert: transactions equals: (aPortfolio transactions).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50914886!
test04PortfolioWithPortfolioWithAccountHasAccountBalance

	| aPortfolio anOtherPortfolio anAccount |
	
	anAccount _ ReceptiveAccount new.
	anAccount register: (Deposit for: 10).
	
	aPortfolio _ Portfolio new.
	
	anOtherPortfolio _ Portfolio new.
	anOtherPortfolio add: anAccount.

	aPortfolio add: anOtherPortfolio.
	
	self assert: 10 equals: (aPortfolio balance).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50914969!
test11CycleWith4Portfolios
	| portfolio subPortfolio1 subPortfolio2 subSubPortfolio |
	portfolio _ Portfolio new.
	subPortfolio1 _ Portfolio new.
	subPortfolio2 _ Portfolio new.
	subSubPortfolio _ Portfolio new.
	portfolio add: subPortfolio1.
	portfolio add: subPortfolio2.
	subPortfolio1 add: subSubPortfolio.
	self should: [subPortfolio2 add: subSubPortfolio] 
		raise: Exception.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50914901!
test05EmptyPortfolioHasNotRegisteredDeposits

	| aPortfolio aDeposit |
	
	aPortfolio _ Portfolio new.
	aDeposit _ Deposit for: 10.
	
	self deny: (aPortfolio hasRegistered: aDeposit).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50914923!
test07EmptyPortfolioDoesNotHaveTransactions

	| aPortfolio |
	
	aPortfolio _ Portfolio new.
	
	self assert: (OrderedCollection new) equals: (aPortfolio transactions).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50914857!
test01EmptyPortfolioHas0Balance

	| aPortfolio |
	
	aPortfolio _ Portfolio new.
	
	self assert: 0 equals: (aPortfolio balance).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50914947!
test09CycleWith2Portfolios

	| portfolio1 portfolio2 |
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolio1 add: portfolio2.
	self should: [portfolio2 add: portfolio1] 
		raise: Exception.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50914957!
test10CycleWith3portfolios

	| portfolio1 portfolio2 portfolio3 |
	portfolio1 _ Portfolio new.
	portfolio2 _ Portfolio new.
	portfolio3 _ Portfolio new.
	portfolio1 add: portfolio2.
	portfolio2 add: portfolio3.
	self should: [portfolio3 add: portfolio2] 
		raise: Exception.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50914910!
test06PortfolioWithItemsHasRegisteredItemsDeposits

	| aPortfolio anAccount aDeposit |
	
	aDeposit _ Deposit for: 10.
	anAccount _ ReceptiveAccount new.
	anAccount register: aDeposit.
	aPortfolio _ Portfolio new.
	
	aPortfolio add: anAccount.
	
	self assert: (aPortfolio hasRegistered: aDeposit).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50914875!
test03PortfolioWithEmptyPortfolioHasEmptyPortfolioBalance

	| aPortfolio anOtherPortfolio |
	
	aPortfolio _ Portfolio new.
	anOtherPortfolio _ Portfolio new.
	
	aPortfolio add: anOtherPortfolio. 
	
	self assert: 0 equals: (aPortfolio balance).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50914864!
test02PortfolioWithAccountHasAccountBalance

	| aPortfolio anAccount |
	
	aPortfolio _ Portfolio new.
	anAccount _ ReceptiveAccount new.
	anAccount register: (Deposit for: 10).
	
	aPortfolio add: anAccount.
	
	self assert: 10 equals: (aPortfolio balance).! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50915395!
transactions 

	^ transactions copy! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50915405!
hasRegistered: aTransaction

	^ transactions includes: aTransaction 
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50915384 overrides: 50915970!
initialize

	transactions _ OrderedCollection new.
	directParents _ Set new.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50915415!
sumary
	| result |
	result _ OrderedCollection new.
	self transactions do: [:transaction |
		(transaction isKindOf: Withdraw) ifTrue: [
			result addLast: 'withdraw for ', transaction value asString].
		(transaction isKindOf: Deposit) ifTrue: [
			result addLast: 'deposit for ', transaction value asString].].
	result addLast: 'balance = ', (self balance asString)	.
	^result.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50915390!
register: aTransaction

	transactions add: aTransaction 
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:28' prior: 50915399!
balance
	
	^transactions sum: [:aTransaction | aTransaction balanceValue] ifEmpty: [0].! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:29' prior: 50915411 overrides: 50915980!
hasItem: aPortfolioItem

	^self = aPortfolioItem.! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:29' prior: 50915024!
test04WithdrawValueMustBePositive 

	| account withdrawValue |
	
	account := ReceptiveAccount new.
	withdrawValue := 50.
	
	self assert: withdrawValue equals: (Withdraw register: withdrawValue on: account) value
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:29' prior: 50915059!
test07AccountKnowsItsTransactions 

	| account1 deposit1 |
	
	account1 := ReceptiveAccount new.
	
	deposit1 := Deposit register: 50 on: account1.
		
	self assert: 1 equals: account1 transactions size.
	self assert: (account1 transactions includes: deposit1).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:29' prior: 50914997!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| account |
	
	account := ReceptiveAccount new.

	self assert: 0 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:29' prior: 50915014!
test03WithdrawDecreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
		
	self assert: 50 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:29' prior: 50915034!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| account deposit withdraw |
	
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: account.
	withdraw := Withdraw register: 50 on: account.
		
	self assert: (account hasRegistered: deposit).
	self assert: (account hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:29' prior: 50915047!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| deposit withdraw account |
	
	account := ReceptiveAccount new.
	deposit :=  Deposit for: 200.
	withdraw := Withdraw for: 50.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered:withdraw).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:29' prior: 50915005!
test02DepositIncreasesBalanceOnTransactionValue 

	| account |
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
		
	self assert: 100 equals: account balance.
! !
!ReportsTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:29' prior: 50915125!
test05
	| account sumary deposit expected |
	account _ ReceptiveAccount  new.
	deposit _ Deposit for: 20. 
	account register: deposit.
	sumary _ account sumary.
	expected _ OrderedCollection with: 'deposit for 20' with: 'balance = 20'.
	self assert: expected equals: sumary.! !
!ReportsTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:29' prior: 50915137!
test06
	| account sumary withdraw expected |
	account _ ReceptiveAccount  new.
	withdraw _ Withdraw for: 10. 
	account register: withdraw.
	sumary _ account sumary.
	expected _ OrderedCollection with: 'withdraw for 10' with: 'balance = -10'.
	self assert: expected equals: sumary.! !
!ReportsTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:29' prior: 50915101!
test03
	| account sumary withdraw expected |
	account _ ReceptiveAccount  new.
	withdraw _ Withdraw for: 10. 
	account register: withdraw.
	sumary _ account sumary.
	expected _ OrderedCollection with: 'withdraw for -10' with: 'balance = -10'.
	self assert: 'balance = -10' equals: sumary last.! !
!ReportsTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:29' prior: 50915113!
test04
	| account sumary deposit expected |
	account _ ReceptiveAccount  new.
	deposit _ Deposit for: 10. 
	account register: deposit.
	sumary _ account sumary.
	expected _ OrderedCollection with: 'deposit for 10' with: 'balance = 10'.
	self assert: expected equals: sumary.! !
!ReportsTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:29' prior: 50915082!
test01
	| account sumary expected |
	account _ ReceptiveAccount  new.
	sumary _ account sumary.
	expected _ OrderedCollection with: 'balance = 0'.
	self assert: expected equals:  sumary.! !
!ReportsTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:29' prior: 50915149!
test07
	| account sumary withdraw expected deposit |
	account _ ReceptiveAccount  new.
	withdraw _ Withdraw for: 10. 
	deposit _ Deposit for: 10.
	account register: withdraw.
	account register: deposit.
	sumary _ account sumary.
	expected _ OrderedCollection with: 'withdraw for 10' with: 'deposit for 10' with: 'balance = 0'.
	self assert: expected equals: sumary.! !
!ReportsTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:29' prior: 50915091!
test02
	| account sumary deposit |
	account _ ReceptiveAccount  new.
	deposit _ Deposit for: 10. 
	account register: deposit.
	sumary _ account sumary.
	self assert: 'balance = 10' equals: sumary last.! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:29' prior: 50915263 overrides: 50915898!
value

	^ value! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:29' prior: 50915251!
initializeFor: aValue

	value := aValue ! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:29' prior: 50915259!
balanceValue
	^value negated.! !
!Withdraw methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:41:29' prior: 50915255!
addValueToBalance: aBalance

	^ aBalance - value.! !

TestCase subclass: #WireTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #WireTest category: 'Portfolio-Ejercicio' stamp: 'TM 10/24/2021 19:46:02'!
TestCase subclass: #WireTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!WireTest methodsFor: 'nil' stamp: 'TM 10/24/2021 19:48:04'!
test01

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireFor: 10 to: aReceiver).
	
	self assert: 10 equals: aWire value.! !
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:48:42' prior: 50916365!
test01

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: 10 equals: aWire value.! !

!testRun: #WireTest #test01 stamp: 'TM 10/24/2021 19:48:46'!
ERROR!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:49:08'!
sendWireTo: aReceptiveAccount for: aSmallInteger 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:49:32' prior: 50916387!
sendWireTo: aReceiver for: anAmount 
	
	^10.! !

!testRun: #WireTest #test01 stamp: 'TM 10/24/2021 19:49:38'!
PASSED!

!testRun: #WireTest #test01 stamp: 'TM 10/24/2021 19:49:38'!
PASSED!
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:50:23'!
test02

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: 10 equals: aWire value.! !
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:53:01' prior: 50916402!
test02

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: -10 equals: aSender transactions last balanceValue.! !

!testRun: #WireTest #test02 stamp: 'TM 10/24/2021 19:53:11'!
ERROR!
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 19:54:21' prior: 50916393!
sendWireTo: aReceiver for: anAmount 
	
	aReceiver register: (Deposit for: anAmount).
	^anAmount .! !

----STARTUP---- (24 October 2021 19:57:08) as D:\Users\Tomas\Documents\CUIS\windows64\CuisUniversity-4913.image!


!classRemoval: #ReceptiveAccount stamp: 'TM 10/24/2021 19:57:15'!
PortfolioItem subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Portfolio stamp: 'TM 10/24/2021 19:57:16'!
PortfolioItem subclass: #Portfolio
	instanceVariableNames: 'portfolioItems'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioItem stamp: 'TM 10/24/2021 19:57:16'!
Object subclass: #PortfolioItem
	instanceVariableNames: 'directParents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Withdraw stamp: 'TM 10/24/2021 19:57:16'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Deposit stamp: 'TM 10/24/2021 19:57:17'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #AccountTransaction stamp: 'TM 10/24/2021 19:57:17'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReportsTest stamp: 'TM 10/24/2021 19:57:17'!
TestCase subclass: #ReportsTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveAccountTest stamp: 'TM 10/24/2021 19:57:18'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioTest stamp: 'TM 10/24/2021 19:57:18'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

----End fileIn of D:\Users\Tomas\Documents\CUIS\windows64\Portfolio 2.st----!

TestCase subclass: #WireTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #WireTest category: 'Portfolio-Solucion' stamp: 'TM 10/24/2021 19:59:02'!
TestCase subclass: #WireTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!WireTest methodsFor: 'no messages' stamp: 'TM 10/24/2021 20:00:00'!
test01

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: 10 equals: aWire value.! !

!testRun: #WireTest #test01 stamp: 'TM 10/24/2021 20:00:05'!
ERROR!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'TM 10/24/2021 20:00:29'!
sendWireTo: aReceptiveAccount for: aSmallInteger 
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'TM 10/24/2021 20:00:37' prior: 50917235!
sendWireTo: aReceptiveAccount for: aSmallInteger 
	
	^10.! !

!testRun: #WireTest #test01 stamp: 'TM 10/24/2021 20:00:46'!
PASSED!

!testRun: #WireTest #test01 stamp: 'TM 10/24/2021 20:00:46'!
PASSED!
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:01:02'!
test02

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: 10 equals: aWire value.! !

!testRun: #WireTest #test02 stamp: 'TM 10/24/2021 20:01:03'!
PASSED!

!testRun: #WireTest #test01 stamp: 'TM 10/24/2021 20:01:03'!
PASSED!

!testRun: #WireTest #test02 stamp: 'TM 10/24/2021 20:01:03'!
PASSED!

!methodRemoval: WireTest #test02 stamp: 'TM 10/24/2021 20:01:16'!
test02

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: 10 equals: aWire value.!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'TM 10/24/2021 20:01:39' prior: 50917241!
sendWireTo: aReceiver for: anAmount 
	
	^anAmount.! !

!testRun: #WireTest #test01 stamp: 'TM 10/24/2021 20:01:41'!
PASSED!

!testRun: #WireTest #test01 stamp: 'TM 10/24/2021 20:01:44'!
PASSED!

!testRun: #WireTest #test01 stamp: 'TM 10/24/2021 20:01:44'!
PASSED!
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:01:52'!
test02

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: 10 equals: aWire value.! !
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:02:59' prior: 50917286!
test02

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: 10 equals: (aSender transactions last affectBalance: 0).! !
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:03:05' prior: 50917296!
test02

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: -10 equals: (aSender transactions last affectBalance: 0).! !

!testRun: #WireTest #test02 stamp: 'TM 10/24/2021 20:03:10'!
ERROR!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'TM 10/24/2021 20:03:39' prior: 50917275!
sendWireTo: aReceiver for: anAmount 
	
	self register: (Withdraw for: 10).
	^anAmount.! !

!testRun: #WireTest #test02 stamp: 'TM 10/24/2021 20:03:43'!
PASSED!

!testRun: #WireTest #test01 stamp: 'TM 10/24/2021 20:03:43'!
PASSED!

!testRun: #WireTest #test02 stamp: 'TM 10/24/2021 20:03:43'!
PASSED!
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:03:55'!
test03

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: 10 equals: (aReceiver transactions last affectBalance: 0).! !

!testRun: #WireTest #test03 stamp: 'TM 10/24/2021 20:04:00'!
ERROR!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'TM 10/24/2021 20:04:30' prior: 50917320!
sendWireTo: aReceiver for: anAmount 
	
	self register: (Withdraw for: anAmount).
	aReceiver register: (Deposit for: anAmount).
	
	^anAmount.! !

!testRun: #WireTest #test03 stamp: 'TM 10/24/2021 20:04:33'!
PASSED!

!testRun: #WireTest #test01 stamp: 'TM 10/24/2021 20:04:33'!
PASSED!

!testRun: #WireTest #test02 stamp: 'TM 10/24/2021 20:04:33'!
PASSED!

!testRun: #WireTest #test03 stamp: 'TM 10/24/2021 20:04:33'!
PASSED!
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:06:54'!
test04

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: (aSender transactions last) equals: (aWire senderLeg).! !

!testRun: #WireTest #test04 stamp: 'TM 10/24/2021 20:06:57'!
ERROR!

!classDefinition: #Wire category: 'Portfolio-Solucion' stamp: 'TM 10/24/2021 20:08:45'!
Object subclass: #Wire
	instanceVariableNames: 'senderLeg receiverLeg value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'TM 10/24/2021 20:08:14' prior: 50917345!
sendWireTo: aReceiver for: anAmount 
	
	| aWire |
	aWire _ Wire from: self to: aReceiver for: anAmount.
	
	self register: (Withdraw for: anAmount).
	aReceiver register: (Deposit for: anAmount).
	
	^aWire.! !
!Wire class methodsFor: 'instance creation' stamp: 'TM 10/24/2021 20:09:18'!
from: aReceptiveAccount to: aReceptiveAccount2 for: aSmallInteger 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFrom: aReceptiveAccount to: aReceptiveAccount2 for: aSmallInteger ! !
!Wire class methodsFor: 'instance creation' stamp: 'TM 10/24/2021 20:09:54' prior: 50917390!
from: aSender to: aReceiver for: anAmount 

	^self new initializeFrom: aSender to: aReceiver for: anAmount.! !

!testRun: #WireTest #test04 stamp: 'TM 10/24/2021 20:09:56'!
ERROR!

!classDefinition: #Wire category: 'Portfolio-Solucion' stamp: 'TM 10/24/2021 20:10:26'!
Object subclass: #Wire
	instanceVariableNames: 'senderLeg receiverLeg value sender'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Wire category: 'Portfolio-Solucion' stamp: 'TM 10/24/2021 20:10:26'!
Object subclass: #Wire
	instanceVariableNames: 'senderLeg receiverLeg value sender receiver'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #Wire category: 'Portfolio-Solucion' stamp: 'TM 10/24/2021 20:10:26'!
Object subclass: #Wire
	instanceVariableNames: 'senderLeg receiverLeg value sender receiver amount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Wire methodsFor: 'initialization' stamp: 'TM 10/24/2021 20:10:27'!
initializeFrom: aSender to: aReceiver for: anAmount 
	self shouldBeImplemented.
	sender := aSender.
	receiver := aReceiver.
	amount := anAmount.! !
!Wire methodsFor: 'initialization' stamp: 'TM 10/24/2021 20:11:56' prior: 50917434!
initializeFrom: aSender to: aReceiver for: anAmount 

	senderLeg _ Withdraw for: anAmount.
	receiverLeg _ Deposit for: anAmount.

	aSender register: senderLeg.
	aReceiver register: receiverLeg.

	value := anAmount.! !

!testRun: #WireTest #test04 stamp: 'TM 10/24/2021 20:12:02'!
ERROR!
!Wire methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:12:16'!
senderLeg
	self shouldBeImplemented.
	^senderLeg! !
!Wire methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:12:21' prior: 50917454!
senderLeg

	^senderLeg! !

!testRun: #WireTest #test04 stamp: 'TM 10/24/2021 20:12:25'!
FAILURE!

 (aWire senderLeg)!

(aSender transactions last)!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'TM 10/24/2021 20:13:33' prior: 50917381!
sendWireTo: aReceiver for: anAmount 
	
	| aWire |
	aWire _ Wire from: self to: aReceiver for: anAmount.
	
	^aWire.! !

!testRun: #WireTest #test04 stamp: 'TM 10/24/2021 20:13:38'!
PASSED!

!testRun: #WireTest #test01 stamp: 'TM 10/24/2021 20:13:39'!
FAILURE!

!testRun: #WireTest #test02 stamp: 'TM 10/24/2021 20:13:39'!
PASSED!

!testRun: #WireTest #test03 stamp: 'TM 10/24/2021 20:13:39'!
PASSED!

!testRun: #WireTest #test04 stamp: 'TM 10/24/2021 20:13:39'!
PASSED!

!testRun: #WireTest #test01 stamp: 'TM 10/24/2021 20:13:39'!
FAILURE!
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:14:11' prior: 50917224!
test01

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: 10 equals: (aWire value).! !
!Wire methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:14:28' overrides: 16881508!
value

	^value.! !

!testRun: #WireTest #test01 stamp: 'TM 10/24/2021 20:14:30'!
PASSED!

!testRun: #WireTest #test02 stamp: 'TM 10/24/2021 20:14:30'!
PASSED!

!testRun: #WireTest #test03 stamp: 'TM 10/24/2021 20:14:30'!
PASSED!

!testRun: #WireTest #test04 stamp: 'TM 10/24/2021 20:14:30'!
PASSED!
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:14:41'!
test05

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: (aSender transactions last) equals: (aWire senderLeg).! !
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:14:53' prior: 50917508!
test05

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: (aReceiver transactions last) equals: (aWire receiverLeg).! !

!testRun: #WireTest #test05 stamp: 'TM 10/24/2021 20:14:56'!
ERROR!
!Wire methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:15:00'!
receiverLeg
	self shouldBeImplemented.
	^receiverLeg! !
!Wire methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:15:03' prior: 50917531!
receiverLeg

	^receiverLeg! !

!testRun: #WireTest #test05 stamp: 'TM 10/24/2021 20:15:06'!
PASSED!

!testRun: #WireTest #test01 stamp: 'TM 10/24/2021 20:15:06'!
PASSED!

!testRun: #WireTest #test02 stamp: 'TM 10/24/2021 20:15:06'!
PASSED!

!testRun: #WireTest #test03 stamp: 'TM 10/24/2021 20:15:07'!
PASSED!

!testRun: #WireTest #test04 stamp: 'TM 10/24/2021 20:15:07'!
PASSED!

!testRun: #WireTest #test05 stamp: 'TM 10/24/2021 20:15:07'!
PASSED!
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:16:01'!
test06

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: (aSender transactions last wire) equals: (aWire).! !

!testRun: #WireTest #test06 stamp: 'TM 10/24/2021 20:16:02'!
ERROR!

!classDefinition: #WireWithdrawLeg category: 'Portfolio-Solucion' stamp: 'TM 10/24/2021 20:17:53'!
ProtoObject subclass: #WireWithdrawLeg
	instanceVariableNames: 'wire'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #WireDepositLeg category: 'Portfolio-Solucion' stamp: 'TM 10/24/2021 20:18:03'!
ProtoObject subclass: #WireDepositLeg
	instanceVariableNames: 'wire'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!
!Wire methodsFor: 'initialization' stamp: 'TM 10/24/2021 20:17:32' prior: 50917442!
initializeFrom: aSender to: aReceiver for: anAmount 

	senderLeg _ WireWithdrawLeg for: anAmount.
	receiverLeg _ WireDepositLeg for: anAmount.

	aSender register: senderLeg.
	aReceiver register: receiverLeg.

	value := anAmount.! !

AccountTransaction subclass: #WireDepositLeg
	instanceVariableNames: 'wire'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #WireDepositLeg category: 'Portfolio-Solucion' stamp: 'TM 10/24/2021 20:18:24'!
AccountTransaction subclass: #WireDepositLeg
	instanceVariableNames: 'wire'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

AccountTransaction subclass: #WireWithdrawLeg
	instanceVariableNames: 'wire'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classDefinition: #WireWithdrawLeg category: 'Portfolio-Solucion' stamp: 'TM 10/24/2021 20:18:31'!
AccountTransaction subclass: #WireWithdrawLeg
	instanceVariableNames: 'wire'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!testRun: #WireTest #test06 stamp: 'TM 10/24/2021 20:18:43'!
ERROR!
!WireWithdrawLeg class methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:19:09'!
for: aSmallInteger 
	self shouldBeImplemented.! !
!Wire methodsFor: 'initialization' stamp: 'TM 10/24/2021 20:20:10' prior: 50917581!
initializeFrom: aSender to: aReceiver for: anAmount 

	senderLeg _ WireWithdrawLeg of: self.
	receiverLeg _ WireDepositLeg of: self.

	aSender register: senderLeg.
	aReceiver register: receiverLeg.

	value := anAmount.! !

!testRun: #WireTest #test06 stamp: 'TM 10/24/2021 20:20:16'!
ERROR!
!WireWithdrawLeg class methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:20:22'!
of: aWire 
	self shouldBeImplemented.! !
!WireWithdrawLeg class methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:20:55' prior: 50917636!
of: aWire 
	
	self new initializeOf: aWire.! !

!testRun: #WireTest #test06 stamp: 'TM 10/24/2021 20:21:01'!
ERROR!

!testRun: #WireTest #test06 stamp: 'TM 10/24/2021 20:21:07'!
ERROR!
!WireWithdrawLeg methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:21:18'!
initializeOf: aWire 
	self shouldBeImplemented.
	wire := aWire.! !
!WireWithdrawLeg methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:21:25' prior: 50917650!
initializeOf: aWire 

	wire _ aWire.! !

!testRun: #WireTest #test06 stamp: 'TM 10/24/2021 20:21:28'!
ERROR!
!WireDepositLeg class methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:21:39'!
of: aWire 
	self shouldBeImplemented.! !
!WireDepositLeg class methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:21:59' prior: 50917661!
of: aWire 
	
	self new initializeOf: aWire.! !

!testRun: #WireTest #test06 stamp: 'TM 10/24/2021 20:22:01'!
ERROR!
!WireDepositLeg methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:22:09'!
initializeOf: aWire 
	self shouldBeImplemented.
	wire := aWire.! !
!WireDepositLeg methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:22:12' prior: 50917672!
initializeOf: aWire 

	wire := aWire.! !

!testRun: #WireTest #test06 stamp: 'TM 10/24/2021 20:22:13'!
ERROR!
!WireWithdrawLeg class methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:22:20'!
wire
	self shouldBeImplemented.! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'TM 10/24/2021 20:22:56' prior: 50917467!
sendWireTo: aReceiver for: anAmount 
	
	| aWire |
	aWire _ (Wire from: self to: aReceiver for: anAmount).
	
	^aWire.! !
!WireWithdrawLeg class methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:23:20' prior: 50917641!
of: aWire 
	
	^(self new initializeOf: aWire).! !
!WireDepositLeg class methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:23:37' prior: 50917666!
of: aWire 
	
	^(self initializeOf: aWire).! !
!WireDepositLeg class methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:24:21' prior: 50917702!
of: aWire 
	
	^(self new initializeOf: aWire).! !

!methodRemoval: WireWithdrawLeg class #for: stamp: 'TM 10/24/2021 20:24:25'!
for: aSmallInteger 
	self shouldBeImplemented.!

!methodRemoval: WireWithdrawLeg class #wire stamp: 'TM 10/24/2021 20:24:27'!
wire
	self shouldBeImplemented.!

!testRun: #WireTest #test01 stamp: 'TM 10/24/2021 20:24:37'!
PASSED!

!testRun: #WireTest #test02 stamp: 'TM 10/24/2021 20:24:37'!
ERROR!

!testRun: #WireTest #test03 stamp: 'TM 10/24/2021 20:24:37'!
ERROR!

!testRun: #WireTest #test04 stamp: 'TM 10/24/2021 20:24:37'!
PASSED!

!testRun: #WireTest #test05 stamp: 'TM 10/24/2021 20:24:37'!
PASSED!

!testRun: #WireTest #test06 stamp: 'TM 10/24/2021 20:24:37'!
ERROR!

!testRun: #WireTest #test06 stamp: 'TM 10/24/2021 20:24:40'!
ERROR!
!WireWithdrawLeg methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:24:49'!
wire
	self shouldBeImplemented.
	^wire! !
!WireWithdrawLeg methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:24:54' prior: 50917734!
wire

	^wire! !

!testRun: #WireTest #test06 stamp: 'TM 10/24/2021 20:24:57'!
PASSED!

!testRun: #WireTest #test02 stamp: 'TM 10/24/2021 20:24:59'!
ERROR!
!WireWithdrawLeg methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:25:12' overrides: 50917114!
affectBalance: aSmallInteger 
	self shouldBeImplemented.! !
!WireWithdrawLeg methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:25:35' prior: 50917747 overrides: 50917114!
affectBalance: aBalance
	
	^aBalance - wire value.! !

!testRun: #WireTest #test02 stamp: 'TM 10/24/2021 20:25:38'!
PASSED!

!testRun: #WireTest #test03 stamp: 'TM 10/24/2021 20:25:39'!
ERROR!
!WireDepositLeg methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:25:51' overrides: 50917114!
affectBalance: aSmallInteger 
	self shouldBeImplemented.! !
!WireDepositLeg methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:26:03' prior: 50917763 overrides: 50917114!
affectBalance: aBalance 
	
	^aBalance + wire value.! !

!testRun: #WireTest #test03 stamp: 'TM 10/24/2021 20:26:04'!
PASSED!

!testRun: #WireTest #test01 stamp: 'TM 10/24/2021 20:26:09'!
PASSED!

!testRun: #WireTest #test02 stamp: 'TM 10/24/2021 20:26:09'!
PASSED!

!testRun: #WireTest #test03 stamp: 'TM 10/24/2021 20:26:09'!
PASSED!

!testRun: #WireTest #test04 stamp: 'TM 10/24/2021 20:26:09'!
PASSED!

!testRun: #WireTest #test05 stamp: 'TM 10/24/2021 20:26:09'!
PASSED!

!testRun: #WireTest #test06 stamp: 'TM 10/24/2021 20:26:09'!
PASSED!
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:26:29'!
test07

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: (aReceiver transactions last wire) equals: (aWire).! !

!testRun: #WireTest #test07 stamp: 'TM 10/24/2021 20:26:36'!
ERROR!
!WireDepositLeg methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:26:44'!
wire
	self shouldBeImplemented.
	^wire! !
!WireDepositLeg methodsFor: 'unclassified' stamp: 'TM 10/24/2021 20:26:48' prior: 50917801!
wire
	
	^wire! !

!testRun: #WireTest #test07 stamp: 'TM 10/24/2021 20:26:50'!
PASSED!

!testRun: #WireTest #test01 stamp: 'TM 10/24/2021 20:26:50'!
PASSED!

!testRun: #WireTest #test02 stamp: 'TM 10/24/2021 20:26:50'!
PASSED!

!testRun: #WireTest #test03 stamp: 'TM 10/24/2021 20:26:50'!
PASSED!

!testRun: #WireTest #test04 stamp: 'TM 10/24/2021 20:26:50'!
PASSED!

!testRun: #WireTest #test05 stamp: 'TM 10/24/2021 20:26:50'!
PASSED!

!testRun: #WireTest #test06 stamp: 'TM 10/24/2021 20:26:50'!
PASSED!

!testRun: #WireTest #test07 stamp: 'TM 10/24/2021 20:26:50'!
PASSED!
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:29:35'!
test01SendWireCheckValueIsCorrect

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: 10 equals: (aWire value).! !

!methodRemoval: WireTest #test01SendWireCheckValueIsCorrect stamp: 'TM 10/24/2021 20:29:48'!
test01SendWireCheckValueIsCorrect

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: 10 equals: (aWire value).!
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:29:52'!
test01SendWireCheckValueIsCorrect

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: 10 equals: (aWire value).! !

!methodRemoval: WireTest #test01SendWireCheckValueIsCorrect stamp: 'TM 10/24/2021 20:29:54'!
test01SendWireCheckValueIsCorrect

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: 10 equals: (aWire value).!
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:30:02'!
test01SendWireCheckValueIsCorrect

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: 10 equals: (aWire value).! !

!methodRemoval: WireTest #test01 stamp: 'TM 10/24/2021 20:30:02'!
test01

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: 10 equals: (aWire value).!
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:30:29'!
test02SendWireCheckTransactionWasAddedToSender

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: -10 equals: (aSender transactions last affectBalance: 0).! !

!methodRemoval: WireTest #test02 stamp: 'TM 10/24/2021 20:30:29'!
test02

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: -10 equals: (aSender transactions last affectBalance: 0).!
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:30:45'!
test03SendWireCheckTransactionWasAddedToReceiver

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: 10 equals: (aReceiver transactions last affectBalance: 0).! !

!methodRemoval: WireTest #test03 stamp: 'TM 10/24/2021 20:30:45'!
test03

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: 10 equals: (aReceiver transactions last affectBalance: 0).!
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:31:51'!
test04SendWireCheckCreatedWireLegIsSenderTransaction

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: (aSender transactions last) equals: (aWire senderLeg).! !

!methodRemoval: WireTest #test04 stamp: 'TM 10/24/2021 20:31:51'!
test04

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: (aSender transactions last) equals: (aWire senderLeg).!
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:32:00'!
test05SendWireCheckCreatedWireLegIsReceiverTransaction

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: (aReceiver transactions last) equals: (aWire receiverLeg).! !

!methodRemoval: WireTest #test05 stamp: 'TM 10/24/2021 20:32:00'!
test05

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: (aReceiver transactions last) equals: (aWire receiverLeg).!
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:32:41'!
test06SendWireCheckSenderLegWireIsWireCreated

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: (aSender transactions last wire) equals: (aWire).! !

!methodRemoval: WireTest #test06 stamp: 'TM 10/24/2021 20:32:41'!
test06

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: (aSender transactions last wire) equals: (aWire).!
!WireTest methodsFor: 'as yet unclassified' stamp: 'TM 10/24/2021 20:32:53'!
test07SendWireCheckReceiverLegWireIsWireCreated

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: (aReceiver transactions last wire) equals: (aWire).! !

!methodRemoval: WireTest #test07 stamp: 'TM 10/24/2021 20:32:53'!
test07

	| aReceiver aSender aWire |
	aSender _ ReceptiveAccount new.
	aReceiver _ ReceptiveAccount new.
	
	aWire _ (aSender sendWireTo: aReceiver for: 10).
	
	self assert: (aReceiver transactions last wire) equals: (aWire).!

----SNAPSHOT----(24 October 2021 20:36:59) CuisUniversity-4913.image priorSource: 18681020!

!classRemoval: #Wire stamp: 'TM 10/24/2021 20:37:38'!
Object subclass: #Wire
	instanceVariableNames: 'senderLeg receiverLeg value sender receiver amount'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Withdraw stamp: 'TM 10/24/2021 20:37:39'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #WireWithdrawLeg stamp: 'TM 10/24/2021 20:37:39'!
AccountTransaction subclass: #WireWithdrawLeg
	instanceVariableNames: 'wire'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #WireDepositLeg stamp: 'TM 10/24/2021 20:37:39'!
AccountTransaction subclass: #WireDepositLeg
	instanceVariableNames: 'wire'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Deposit stamp: 'TM 10/24/2021 20:37:40'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #AccountTransaction stamp: 'TM 10/24/2021 20:37:40'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccount stamp: 'TM 10/24/2021 20:37:40'!
Account subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Portfolio stamp: 'TM 10/24/2021 20:37:41'!
Account subclass: #Portfolio
	instanceVariableNames: 'accounts parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #Account stamp: 'TM 10/24/2021 20:37:41'!
Object subclass: #Account
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #WireTest stamp: 'TM 10/24/2021 20:37:42'!
TestCase subclass: #WireTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #ReceptiveAccountTest stamp: 'TM 10/24/2021 20:37:42'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

!classRemoval: #PortfolioTest stamp: 'TM 10/24/2021 20:37:42'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Solucion'!

----End fileIn of D:\Users\Tomas\Documents\CUIS\windows64\Portfolio 2.st----!

----SNAPSHOT----(24 October 2021 20:38:17) CuisUniversity-4913.image priorSource: 18763473!